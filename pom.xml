<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>no.kantega</groupId>
    <artifactId>pdf-converter-parent</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!--
     Note: This project can be built on any machine. However, testing the pdf-converter-transformer-office-word
     module requires the following:
      (1) An installation of the Microsoft Scripting Host (comes with most versions of MS Windows)
      (2) An installation of Microsoft Word 2007 or higher (MS Word 2007 additionally requires the PDF plugin)
      (3) Microsoft Word is not running when the built process is started and is neither started manually while the
          tests are running
     If you cannot provide this setup, build this project with active "no-office" profile and the corresponding
     tests will be skipped. In general, unit tests for the converters can fail since MS Word was not built for
     short-interval restarting. However, this happens rarely.

     Furthermore, for running the tests of the pdf-converter-server-standalone module, you require:
      (4) Your machine must have a free port and it must be possible to bind a server listener to this port

     Also, be careful when running a local converter since it requires synchronization with MS Word. When the JVM
     running this program exits abnormally (for example by a user interrupt causing a TerminateProcess signal), the
     application cannot run any shut down hooks to terminate MS Word. The MS Word process will therefore leak.
     When developing and testing this application, always keep an eye on your machine's task manager.
    -->

    <modules>
        <module>pdf-converter-api</module>
        <module>pdf-converter-local</module>
        <module>pdf-converter-local-demo</module>
        <module>pdf-converter-transformer</module>
        <module>pdf-converter-transformer-office</module>
        <module>pdf-converter-client</module>
        <module>pdf-converter-server</module>
        <module>pdf-converter-server-standalone</module>
        <module>pdf-converter-util-all</module>
        <module>pdf-converter-util-conversion</module>
        <module>pdf-converter-util-ws</module>
        <module>pdf-converter-test</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.java.ws.rs>2.0</version.java.ws.rs>
        <version.javax.inject>1.0.0-PRD</version.javax.inject>
        <version.jersey>2.1</version.jersey>
        <version.hk2>2.1.96</version.hk2>
        <version.guava>14.0.1</version.guava>
        <version.zt-exec>1.5</version.zt-exec>
        <version.jopt-simple>4.5</version.jopt-simple>
        <version.slf4j>1.7.5</version.slf4j>
        <version.junit>4.11</version.junit>
        <version.mockito>1.9.5</version.mockito>
        <version.thread-weaver>0.1</version.thread-weaver>
        <version.maven.compiler-plugin>3.1</version.maven.compiler-plugin>
        <version.maven.surefire-plugin>2.16</version.maven.surefire-plugin>
        <version.maven.shade-plugin>2.1</version.maven.shade-plugin>
        <version.java.compiler>1.6</version.java.compiler>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- General -->
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${version.jersey}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>inject-api</artifactId>
                <version>${version.javax.inject}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.guava}</version>
            </dependency>

            <dependency>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>zt-exec</artifactId>
                <version>${version.zt-exec}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${version.jopt-simple}</version>
            </dependency>

            <!-- RS-API / Jersey -->
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${version.java.ws.rs}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${version.jersey}</version>
            </dependency>

            <!-- Testing / Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${version.slf4j}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${version.mockito}</version>
            </dependency>

            <dependency>
                <groupId>com.googlecode.thread-weaver</groupId>
                <artifactId>threadweaver</artifactId>
                <version>${version.thread-weaver}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven.compiler-plugin}</version>
                <inherited>true</inherited>
                <configuration>
                    <source>${version.java.compiler}</source>
                    <target>${version.java.compiler}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>